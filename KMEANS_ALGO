# @author: Siva Shankar

import pandas as pd
import numpy as np
Header=['Age','Workclass','Final_Weight','Education','Edu_Num','Martial','Occupation','Relationship','Race','Gender','Capital_Gain','Capital_Loss','Hours_per_Work','Native_Country','Salary']
data=pd.read_csv(r"income.csv",names=Header)
print("\n\nDATA DESCRIPTION : \n",data.describe())

data.dropna(inplace=True)  #Eliminating Null Values

#Converting Strings To NUmeric Values
from sklearn.preprocessing  import LabelEncoder
LE=LabelEncoder()
data['Workclass']=LE.fit_transform(data['Workclass'])
data['Education']=LE.fit_transform(data['Education'])
data['Martial']=LE.fit_transform(data['Martial'])
data['Occupation']=LE.fit_transform(data['Occupation'])
data['Race']=LE.fit_transform(data['Race'])
data['Relationship']=LE.fit_transform(data['Relationship'])
data['Gender']=LE.fit_transform(data['Gender'])
data['Hours_per_Work']=LE.fit_transform(data['Hours_per_Work'])
data['Native_Country']=LE.fit_transform(data['Native_Country'])
data['Salary']=LE.fit_transform(data['Salary'])

#Splitting Dependent and Independent Items
x=data.iloc[:,:-1].values
y=data.iloc[:,-1].values

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(
    x,y,test_size=0.2,random_state=9)

#Assigning Splitted Data To Algorithm
from sklearn.neighbors import KNeighborsClassifier
model=KNeighborsClassifier(n_neighbors=1)
model.fit(xtrain,ytrain)

ypred=model.predict(xtest)

#Printing The Predicted Output
from sklearn.metrics import accuracy_score
print("\n\nACCURACY  :", accuracy_score(ytest,ypred)*100)

from sklearn.metrics import confusion_matrix
print("\n\nCONFUSION :\n",confusion_matrix(ytest,ypred))

